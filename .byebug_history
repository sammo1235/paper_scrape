continue
uri.to_s
uri.uri
uri.request_uri
hash
uri
c
continue
@data[24]['link']
@data[24]
@data.count
@data
continue
pp data.flatten
pp data
data
data.count
continue
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("p[class='mb-2']").text
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("p[class='mb-2']")
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("span[class='text-low text-uppercase text-muted']").text
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("span[class='text-low text-uppercase text-muted']")
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("span[class='text-info text-uppercase text-muted']")
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("h4[class='mb-2']").count
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").css("h4[class='mb-2']")
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']").count
@doc.css("div[class='sorted-article-content w-100 d-flex flex-column']")
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a').attribute('href').value
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a').attribute('href')
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a').attribute['href']
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a').attributes['href']
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a').href
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a')['href']
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")[0].css('a')
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']").css('a')
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']").text.strip
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']").text
@doc.css("div[class='sorted-news-list px-3']").css("h4[class='mb-2']")
@doc.css("div[class='sorted-news-list px-3']").css("h4[class'mb-2']")
@doc.css("div[class='sorted-news-list px-3']>h4")
@doc.css("div[class='sorted-news-list px-3']>div>h4").count
@doc.css("div[class='sorted-news-list px-3']>div>a").count
@doc.css("div[class='sorted-news-list px-3']>div").count
@doc.css("div[class='sorted-news-list px-3']>div")
@doc.css("div[class='sorted-news-list px-3']>a").map {|v| puts v.text }
@doc.css("div[class='sorted-news-list px-3']>h4").map {|v| puts v.text }
@doc.css("div[class='sorted-news-list px-3']>div>h4").map {|v| puts v.text }
@doc.css("div[class='sorted-news-list px-3']>div").map {|v| puts v.text }
@doc.css("div[class='sorted-news-list px-3']>div").count
@doc.css("div[class='sorted-news-list px-3']>div")
@doc.css("div[class='sorted-news-list px-3']")
@doc.css("div[class='sorted-news-list px-3']").count
c
pp data.flatten
pp data
continue
pp data
pp data.flatten
data
c
data
c
@b
c
@data[0]['title']
@data[0]
@data
continue
b = binding
self.get_binding.name
self.get_binding.paper
self.get_binding
get_binding.inspect
get_binding
c
data
c
continue
pp @data
@data.pluck(:description)
@data[0][:description]
@data[0][:link]
@data[0][:date]
@data[0][:data]
@data[0][:title]
@data[0]
@data
c
data
c
@data
c
data.flatten.count
data.flatten
data
PaperScrape.new(user['search_terms']).fetch_data
data = _
PaperScrape.new(user['search_terms']).fetch_data
@data
continue
data.flatten[0][:date]
data.flatten[0]
data.flatten
data
c
continue
data.flatten.count
data.flatten
data
continue
uri.host
uri.query
uri.inspect
uri.path
uri.methods
uri.request_uri
uri
continue
paper.css("h3[class='gs_rt']>a").empty?
paper.css("h3[class='gs_rt']>a").nil?
paper.css("h3[class='gs_rt']>a")
paper.css("h3[class='gs_rt']>a") != []
paper.css("h3[class='gs_rt']>a") == []
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
continue
paper.css("h3[class='gs_rt']>span").text
paper.css("h3[class='gs_rt']>span")
paper.css("h3[class='gs_rt']")
paper.css("h3[class='gs_rt']>a")
paper.css("h3[class='gs_rt']>a").nil?
paper.css("h3[class='gs_rt']")
paper.css("h3[class='gs_rt']>a")
paper.css("h3[class='gs_rt']>a").attribute('href')
paper
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
@doc.css("div[class='gs_ri']").count
@doc.css("div[class='gs_ri']")[0].css("div[class='gs_rs']").text
@doc.css("div[class='gs_ri']")[0].css("div[class='gs_rs']")
@doc.css("div[class='gs_ri']")[0].css("h3[class='gs_rt']>a").attribute('href').value
@doc.css("div[class='gs_ri']")[0].css("h3[class='gs_rt']>a")
@doc.css("div[class='gs_ri']")[0].css('a').text
@doc.css("div[class='gs_ri']")[0].css('a')
@doc.css("div[class='gs_ri']")[0]
@doc.css("div[class='gs_ri']")
@doc
continue
uri
exit
exi
continue
heading.css('a').attribute('href').value
heading.css('a').attribute('href')
heading.css('a').attributes('href')
heading.css('a').attribute['href']
heading.css('a').attributes['href']
heading.css('a')['href']
heading.css('a').text
heading.css('a')
heading
continue
@doc.css("li[class='mb20 pb20 cleared']")[0].css('p>time').text.strip
@doc.css("li[class='mb20 pb20 cleared']")[0].css('p>time').text
@doc.css("li[class='mb20 pb20 cleared']")[0].css('p>time')
@doc.css("li[class='mb20 pb20 cleared']")[0].css("h2[role='heading']").children[1].attributes['href'].value
@doc.css("li[class='mb20 pb20 cleared']")[0].css("h2[role='heading']").text.strip
@doc.css("li[class='mb20 pb20 cleared']")[0].css("h2[role='heading']")
@doc.css("li[class='mb20 pb20 cleared']")[0]
@doc.css("li[class='mb20 pb20 cleared']").count
@doc.css("li[class='mb20 pb20 cleared']")
@doc.css("li[class=['mb20 pb20 cleared']")
c
paper.css("ul[class='clean-list text13 serif mb0']").text.strip
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[index].css("time[itemprop='datePublished']")[0]['datetime']
                            equalize-line-height text-gray-light']")[index]
@doc.css("p[class='mt6 mb0 inline-block text13
paper.css("h2[role='heading']")
paper
continue
@doc.css("div[class='cleared']")
@doc
continue
query
@data
out
continue
out
continue
out
continue
out = renderer.result(self.get_binding)
renderer
c
        </body>
          <p>Hey! <%= @data[0]['title'] %></p>
          <h1>We have some news for you!</h1>
        <body>
        </head>
          <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
        <head>
      <html>
renderer = ERB.new("<!DOCTYPE html>
continue
result
c
continue
result = ERB.new(template).result(binding)
binding
ERB
template
continue
data
continue
data
continue
data
continue
@search
sourced
sourced.new(@search).get_papers
continue
data
continue
data
continue
data
continue
data
continue
@search
