continue
paper.css("h3[class='gs_rt']>a").empty?
paper.css("h3[class='gs_rt']>a").nil?
paper.css("h3[class='gs_rt']>a")
paper.css("h3[class='gs_rt']>a") != []
paper.css("h3[class='gs_rt']>a") == []
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
c
paper.css("h3[class='gs_rt']>a")
continue
paper.css("h3[class='gs_rt']>span").text
paper.css("h3[class='gs_rt']>span")
paper.css("h3[class='gs_rt']")
paper.css("h3[class='gs_rt']>a")
paper.css("h3[class='gs_rt']>a").nil?
paper.css("h3[class='gs_rt']")
paper.css("h3[class='gs_rt']>a")
paper.css("h3[class='gs_rt']>a").attribute('href')
paper
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
paper.css("h3[class='gs_rt']>a").attribute('href').value
c
@doc.css("div[class='gs_ri']").count
@doc.css("div[class='gs_ri']")[0].css("div[class='gs_rs']").text
@doc.css("div[class='gs_ri']")[0].css("div[class='gs_rs']")
@doc.css("div[class='gs_ri']")[0].css("h3[class='gs_rt']>a").attribute('href').value
@doc.css("div[class='gs_ri']")[0].css("h3[class='gs_rt']>a")
@doc.css("div[class='gs_ri']")[0].css('a').text
@doc.css("div[class='gs_ri']")[0].css('a')
@doc.css("div[class='gs_ri']")[0]
@doc.css("div[class='gs_ri']")
@doc
continue
uri
exit
exi
continue
heading.css('a').attribute('href').value
heading.css('a').attribute('href')
heading.css('a').attributes('href')
heading.css('a').attribute['href']
heading.css('a').attributes['href']
heading.css('a')['href']
heading.css('a').text
heading.css('a')
heading
continue
@doc.css("li[class='mb20 pb20 cleared']")[0].css('p>time').text.strip
@doc.css("li[class='mb20 pb20 cleared']")[0].css('p>time').text
@doc.css("li[class='mb20 pb20 cleared']")[0].css('p>time')
@doc.css("li[class='mb20 pb20 cleared']")[0].css("h2[role='heading']").children[1].attributes['href'].value
@doc.css("li[class='mb20 pb20 cleared']")[0].css("h2[role='heading']").text.strip
@doc.css("li[class='mb20 pb20 cleared']")[0].css("h2[role='heading']")
@doc.css("li[class='mb20 pb20 cleared']")[0]
@doc.css("li[class='mb20 pb20 cleared']").count
@doc.css("li[class='mb20 pb20 cleared']")
@doc.css("li[class=['mb20 pb20 cleared']")
c
paper.css("ul[class='clean-list text13 serif mb0']").text.strip
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[index].css("time[itemprop='datePublished']")[0]['datetime']
                            equalize-line-height text-gray-light']")[index]
@doc.css("p[class='mt6 mb0 inline-block text13
paper.css("h2[role='heading']")
paper
continue
@doc.css("div[class='cleared']")
@doc
continue
query
@data
out
continue
out
continue
out
continue
out = renderer.result(self.get_binding)
renderer
c
        </body>
          <p>Hey! <%= @data[0]['title'] %></p>
          <h1>We have some news for you!</h1>
        <body>
        </head>
          <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
        <head>
      <html>
renderer = ERB.new("<!DOCTYPE html>
continue
result
c
continue
result = ERB.new(template).result(binding)
binding
ERB
template
continue
data
continue
data
continue
data
continue
@search
sourced
sourced.new(@search).get_papers
continue
data
continue
data
continue
data
continue
data
continue
@search
sourced.new(@search).get_papers
data
continue
sourced.new(@search).get_papers
sourced
data
continue
@search
source.new(@search).get_papers
source.new(@search)
source.new
c
continue
source.new(@search).get_papers
data
c
continue
@search
SOURCES
source
doc.get_papers
doc
continue
        acc[index.to_s] = inner
        inner['description'] =  paper.css("ul[class='clean-list text13 serif mb0']").text.strip
        inner['link'] =  "#{BASE_URL}#{heading.children[1].attributes['href'].value}"
                            .css("time[itemprop='datePublished']")[0]['datetime']
        inner['date'] = @doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[index]
        inner['title'] = heading.text.strip
        inner = Hash.new
        heading = paper.css("h2[role='heading']")
        index -= 1
        next if index == 0
@doc.css("div[class='cleared']").each_with_object({}).with_index do |(paper, acc), index|
c
continue
c
continue
data
c
continue
data
c
continue
inner
@doc.css("div[class='cleared']")
@doc
res
c
self
@doc
continue
data
continue
PaperScrape.new(user['search_terms']).get_data
data
continue
data
c
search_terms
c
@search
continue
to_array(search)
search
@search
continue
search_terms
continue
user['search_terms'].size
user['search_terms']
user
continue
user
users[1]
users[0]
user
users
continue
user
users
user[1]
user.second
user.first
continue
user
continue
user
c
continue
users['luna']['search_terms']
users['luna']
users = YAML.load_file("app/config/users.yml")
continue
users['luna'][0]
users['luna']['email']
users['luna']
users = YAML.load_file("app/config/users.yml")
continue
users = YAML.load_file("app/config/users.yml")
users = YAML.load_file("config/users.yml")
users
users = YAML.load("config/users.yml")
exit
c
exit
continue
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']")[0]['datetime']
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']")['datetime']
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']")
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']").attribute
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']").attributes
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']")['value']
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']").value
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].css("time[itemprop='datePublished']")
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0].text
@doc.css("p[class='mt6 mb0 inline-block text13 equalize-line-height text-gray-light']")[0]
